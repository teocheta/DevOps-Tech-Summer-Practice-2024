1. Remove files from stage

$ git rm --cached testfile-01

$ git rm --cached -r .

. to say everything from here
 -r which means recursive

2. Restore previous state of file

$ git checkout testfile-01 =  reset the file to the state from previous commit, using git checkout. In this way we do the checkout of the last indexed state of this file on current branch

$ git checkout .

All changes are reverted and our directory in consistent with previous commit

3.  Reset the current HEAD to the selected state

$ git reset =  moves the current pointer in HEAD and branch refs to specific state

-> 3 main ways of operating

--soft

$ git reset --soft HEAD~1

With --soft parameter we came back to the previous HEAD of the repository, but all changes which we commited are unchanged

--hard

$ git reset --hard HEAD~2

We came back two more commits (~HEAD~2) and we said, this time we want to not only move back, but also we want to remove all changes which were done
